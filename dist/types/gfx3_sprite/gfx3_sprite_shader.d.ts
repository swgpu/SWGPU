export declare const SHADER_VERTEX_ATTR_COUNT = 5;
export declare const PIPELINE_DESC: any;
export declare const VERTEX_SHADER = "\nstruct VertexOutput {\n  @builtin(position) Position: vec4<f32>,\n  @location(0) FragUV: vec2<f32>\n};\n\n@group(0) @binding(0) var<uniform> MVPC_MATRIX: mat4x4<f32>;\n\n@vertex\nfn main(\n  @location(0) Position : vec4<f32>,\n  @location(1) TexUV : vec2<f32>\n) -> VertexOutput {\n  var output: VertexOutput;\n  output.Position = MVPC_MATRIX * Position;\n  output.FragUV = TexUV;\n  return output;\n}";
export declare const FRAGMENT_SHADER = "\nstruct FragOutput {\n  @location(0) Base: vec4f,\n  @location(1) Normal: vec4f,\n  @location(2) Id: vec4f\n}\n\n@group(0) @binding(1) var<uniform> ID: vec4<f32>;\n@group(1) @binding(0) var TEXTURE: texture_2d<f32>;\n@group(1) @binding(1) var SAMPLER: sampler;\n\n@fragment\nfn main(\n  @location(0) FragUV: vec2<f32>\n) -> FragOutput {\n  var textureColor = textureSample(TEXTURE, SAMPLER, FragUV);\n  if (textureColor.a == 0)\n  {\n    discard;\n  }\n\n  var output: FragOutput;\n  output.Base = textureColor;\n  output.Normal = vec4(0.0, 0.0, 0.0, 0.0);\n  output.Id = ID;\n  return output;\n}";
